C51 COMPILER V9.53.0.0   ADC                                                               06/02/2020 09:46:25 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN adc.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE adc.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          /*
   2          Analog to Digital Filter.
   3          
   4          by :
   5            - Ahmad Alnoubi
   6            - Ahmad Mahdy 
   7            - Ahmad Khaled
   8            - Ahmad Abdelmageed
   9            - Sayed Abdullah
  10          
  11          The project files includes:
  12            - Proteus Simulation files 
  13            - Kile Simulation files 
  14            - Our Code Files 
  15          */
  16          #include <REG51F020.h>
  17          #include "FILTER.h"
  18          
  19          // Prototypes
  20          void delay(unsigned int);
  21          void init_timer1 (void) ;
  22          void initialize(void) ;
  23          void write_adc(void) ; 
  24          
  25          
  26          #define adc1 P0
  27          #define adc2 P3
  28          
  29          sbit write = P2 ^ 0;
  30          sbit channel =P2^1;
  31          
  32          
  33          int main()
  34          {
  35   1        RESET_REG();
  36   1        initialize();
  37   1        init_timer1();
  38   1        write = 0;
  39   1        EA = 1 ; 
  40   1        
  41   1        while(1){}
  42   1        return 0;
  43   1      }
  44          
  45          
  46          /*Function to Provide delay*/
  47          void delay(unsigned int time)
  48          {
  49   1          unsigned int i;
  50   1          for(i=0; i<=time; i++);
  51   1      }
  52          
  53          void write_adc(void)
  54          {
  55   1        // Apply a low to high edge
C51 COMPILER V9.53.0.0   ADC                                                               06/02/2020 09:46:25 PAGE 2   

  56   1        write = 0;
  57   1        write = 1;
  58   1        
  59   1      }
  60          
  61          void initialize(void)
  62          {
  63   1        // Disable global interrupts
  64   1        EA = 0; 
  65   1        
  66   1      //  // make port 0 as input
  67   1        adc1 = 0xff;
  68   1        adc2 = 0xff;
  69   1      
  70   1        // config port 2
  71   1        P2 = 0xfc;
  72   1      
  73   1        WDTCN = 0xde; // Disable watchdog timer
  74   1        WDTCN = 0xad;
  75   1      }
  76          
  77          void init_timer1 (void)
  78          {
  79   1        // uses system clock DIV BY 12
  80   1      //  CKCON = 0x00; // Define clock (T2M). Timer 2
  81   1      //  T0CON = 0x00;
  82   1      //  
  83   1      //  // Init reload values in the Capture registers
  84   1      //  RCAP2H = 0xFD;
  85   1      //  RCAP2L = 0x00;
  86   1      //  
  87   1      //  // count register set to reload immediately 
  88   1      //  TL0= 0xff;
  89   1      //  TH0= 0xff;
  90   1      //  
  91   1      //  // disable timer2 interrupt
  92   1      //  ET0 = 1;
  93   1      //  T0CON = 0x04; // Start Timer2 by setting TR2 (T2CON.2)
  94   1        
  95   1          TMOD = 0x01;       //Timer0 mode 1 
  96   1          TH0 = 0xfc;        //Load the timer value
  97   1          TL0 = 0xff;
  98   1          TR0 = 1;           //turn ON Timer zero
  99   1          ET0 = 1;           //Enable TImer0 Interrupt
 100   1          EA = 1;            //Enable Global Interrupt bit
 101   1      }
 102          
 103          void ISR_timer2 (void) interrupt 1
 104          {
 105   1        TF0 = 0;
 106   1        write_adc();
 107   1      //  FLITER_CTR = 6 ;
 108   1      //  inputSignal[0] = adc1;
 109   1      //  HPF();
 110   1      //  P1 = outputSignal[0];
 111   1      //  SHIFT_REG(FLITER_CTR);
 112   1          P1 = adc1; 
 113   1        
 114   1      //  data = adc; 
 115   1      //  P1 = ~ data ; 
 116   1      }
*** WARNING C294 IN LINE 42 OF adc.c: unreachable code
C51 COMPILER V9.53.0.0   ADC                                                               06/02/2020 09:46:25 PAGE 3   



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    768    ----
   CONSTANT SIZE    =    288    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1       3
   IDATA SIZE       =    152    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
